# DO NOT MODIFY. THIS FILE IS AUTOGENERATED #

---

dist: xenial
sudo: false

language: minimal

services:
  - docker

.before_script: &auto_skip
- |
    if [ "false" != "$TRAVIS_PULL_REQUEST" ]; then
      TRAVIS_COMMIT_RANGE="$TRAVIS_BRANCH..$TRAVIS_PULL_REQUEST_SHA"
    fi
    if [ "default" = "$VARIANT" ]; then
      Dockerfile="$NODE_VERSION/Dockerfile"
    else
      Dockerfile="$NODE_VERSION/$VARIANT/Dockerfile"
    fi
    if [ "" = "$TRAVIS_COMMIT_RANGE" ]; then
      echo "This is a new branch"
    elif ! git diff --name-only "$TRAVIS_COMMIT_RANGE" -- &> /dev/null; then
      echo "Change range not recognized: '$TRAVIS_COMMIT_RANGE'"
    elif git diff --name-only "$TRAVIS_COMMIT_RANGE" -- | grep -Eq "^$Dockerfile$"; then
      echo "Change of $Dockerfile detected."
    else
      echo "Skip build of $Dockerfile as it's not changed."
      exit
    fi
    if [ "alpine" = "$VARIANT" ]; then
      mkdir -p ccache
      (
        cd ccache
        nc -l -p 5678 < cache.tar.gz &
        nc -l -p 1234 > new-cache.tar.gz &
      )
    fi

script: ./test-build.sh $NODE_VERSION $VARIANT

stages:
  - Test
  - Build
  - name: Deploy
    if: branch = master AND type IN (push)

jobs:
  include:
    - stage: Test
      env:
        - TEST: Markdown link check
      language: node_js
      node_js:
        - lts/*
      install:
        - npm i -g markdown-link-check
      script:
        - find . -name "*.md" | xargs -n 1 markdown-link-check

    - stage: Test
      env:
        - TEST: Editor Config check
      language: node_js
      node_js:
        - lts/*
      install:
        - npm i -g eclint
      script:
        - eclint check

    - stage: Test
      env:
        - TEST: Doc Toc Check
      language: node_js
      node_js:
        - lts/*
      install: npm i -g doctoc
      script:
        - cp README.md README.md.tmp &&
          doctoc --title='## Table of Contents' --github README.md &&
          diff -q README.md README.md.tmp

    - stage: Test
      env:
        - TEST: shfmt check
      script:
        - docker run -it --rm -v "$(pwd)":/sh -w /sh peterdavehello/shfmt:2.6.1 shfmt -sr -i 2 -l -w -ci .
        - git diff --color
        - git diff --stat=220 --color --exit-code

    - stage: Test
      env:
        - TEST: Shell Check
      script: shellcheck *.sh

    - stage: Test
      env:
        - TEST: .travis.yml and travis.yml.template consistency
      script:
        - ./update.sh
        - git diff --stat --exit-code .travis.yml

    - stage: Deploy
      script: ./generate-stackbrew-pr.sh

    # Docker Build #

    - stage: Build
      before_script: *auto_skip
      env:
        - NODE_VERSION: "10"
        - VARIANT: "jessie"

    - stage: Build
      before_script: *auto_skip
      env:
        - NODE_VERSION: "10"
        - VARIANT: "alpine"

      after_success:
        - ccache -s
      addons:
        apt:
          packages:
            - netcat
      before_cache:
        - mv ccache/new-cache.tar.gz ccache/cache.tar.gz
      cache:
        directories:
          - ccache/

    - stage: Build
      before_script: *auto_skip
      env:
        - NODE_VERSION: "10"
        - VARIANT: "slim"

    - stage: Build
      before_script: *auto_skip
      env:
        - NODE_VERSION: "10"
        - VARIANT: "stretch"

    - stage: Build
      before_script: *auto_skip
      env:
        - NODE_VERSION: "11"
        - VARIANT: "alpine"

      after_success:
        - ccache -s
      addons:
        apt:
          packages:
            - netcat
      before_cache:
        - mv ccache/new-cache.tar.gz ccache/cache.tar.gz
      cache:
        directories:
          - ccache/

    - stage: Build
      before_script: *auto_skip
      env:
        - NODE_VERSION: "11"
        - VARIANT: "slim"

    - stage: Build
      before_script: *auto_skip
      env:
        - NODE_VERSION: "11"
        - VARIANT: "stretch"

    - stage: Build
      before_script: *auto_skip
      env:
        - NODE_VERSION: "6"
        - VARIANT: "jessie"

    - stage: Build
      before_script: *auto_skip
      env:
        - NODE_VERSION: "6"
        - VARIANT: "alpine"

      after_success:
        - ccache -s
      addons:
        apt:
          packages:
            - netcat
      before_cache:
        - mv ccache/new-cache.tar.gz ccache/cache.tar.gz
      cache:
        directories:
          - ccache/

    - stage: Build
      before_script: *auto_skip
      env:
        - NODE_VERSION: "6"
        - VARIANT: "onbuild"

    - stage: Build
      before_script: *auto_skip
      env:
        - NODE_VERSION: "6"
        - VARIANT: "slim"

    - stage: Build
      before_script: *auto_skip
      env:
        - NODE_VERSION: "6"
        - VARIANT: "stretch"

    - stage: Build
      before_script: *auto_skip
      env:
        - NODE_VERSION: "8"
        - VARIANT: "jessie"

    - stage: Build
      before_script: *auto_skip
      env:
        - NODE_VERSION: "8"
        - VARIANT: "alpine"

      after_success:
        - ccache -s
      addons:
        apt:
          packages:
            - netcat
      before_cache:
        - mv ccache/new-cache.tar.gz ccache/cache.tar.gz
      cache:
        directories:
          - ccache/

    - stage: Build
      before_script: *auto_skip
      env:
        - NODE_VERSION: "8"
        - VARIANT: "onbuild"

    - stage: Build
      before_script: *auto_skip
      env:
        - NODE_VERSION: "8"
        - VARIANT: "slim"

    - stage: Build
      before_script: *auto_skip
      env:
        - NODE_VERSION: "8"
        - VARIANT: "stretch"

    - stage: Build
      before_script: *auto_skip
      env:
        - NODE_VERSION: "chakracore/10"
        - VARIANT: "default"

    - stage: Build
      before_script: *auto_skip
      env:
        - NODE_VERSION: "chakracore/8"
        - VARIANT: "default"
